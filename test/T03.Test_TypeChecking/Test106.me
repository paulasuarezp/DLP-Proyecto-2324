class
	prog2;
	
global

	types
		deftuple point as /*estructura
			x: INTEGER;
			y: INTEGER;
		end


	vars
		b : INTEGER;

create
	inicio;


feature
	inicio is
	local
		c : [3] INTEGER;
		p, q : point;

	do
		p := q; /* Error, no son tipos simples
		p.x := q.x; /*Correcto
		p.x := q.z; /* Error no existe el campo 'z'
		p.z := q.x; /* Error no existe el campo 'z'
		p.z := q.z; /* Error no existe el campo 'z'
	end
end

run inicio();

//* ERRORES
Error en Type Checking: [27:3] No se puede asignar a un tipo 'Tupla: point'. Sólo es posible asignar a tipos simples {INTEGER, CHARACTER y DOUBLE}.
Error en Type Checking: [29:10] El campo 'z' no pertenece a la tupla 'point'.
Error en Type Checking: [29:3] Los tipos de la izquierda y derecha deben ser iguales. No es posible asignar un 'INTEGER' a un 'INDEFINIDO'.
Error en Type Checking: [30:3] El campo 'z' no pertenece a la tupla 'point'.
Error en Type Checking: [30:3] El lado izquierdo de la asignación tiene una expresión no modificable (no es un lvalue).
Error en Type Checking: [30:3] No se puede asignar a un tipo 'INDEFINIDO'. Sólo es posible asignar a tipos simples {INTEGER, CHARACTER y DOUBLE}.
Error en Type Checking: [30:3] Los tipos de la izquierda y derecha deben ser iguales. No es posible asignar un 'INDEFINIDO' a un 'INTEGER'.
Error en Type Checking: [31:3] El campo 'z' no pertenece a la tupla 'point'.
Error en Type Checking: [31:10] El campo 'z' no pertenece a la tupla 'point'.
Error en Type Checking: [31:3] El lado izquierdo de la asignación tiene una expresión no modificable (no es un lvalue).
Error en Type Checking: [31:3] No se puede asignar a un tipo 'INDEFINIDO'. Sólo es posible asignar a tipos simples {INTEGER, CHARACTER y DOUBLE}.
Error en Type Checking: [31:3] Los tipos de la izquierda y derecha deben ser iguales. No es posible asignar un 'INDEFINIDO' a un 'INDEFINIDO'.
*//