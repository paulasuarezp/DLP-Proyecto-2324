
//*
Este ejemplo no hace nada concreto y está puesto a modo de ejemplo de la sitaxis del lenguaje.
Ver especificaciones del lenguaje para tener mas detalles.
*//

class EJEMPLO;
	
	global
		types
			deftuple tuple1 as /*estructura
				a: INTEGER;
				c: CHARACTER;
				d: DOUBLE;
			end
			deftuple tuple2 as /*estructura
				aa: INTEGER;
				tt: tuple1;
			end
		vars
			i : INTEGER; /*esto estaría bien
			/* j : INTEGER := 2; /*esto estaría mal, no se puede inicializar
			j : INTEGER;
			ai : [2] INTEGER; /*array de una dimensión
			bi : [2][2] INTEGER; /*array de dos dimensiones
			t : tuple1; /*estructura

	create
		factorial; /*Se podrían definir tantos constructores como se desee
		
	feature factorial (i : INTEGER) : INTEGER is /* declaración con valor de retorno INTEGER y parámetro INTEGER
		local
			j, k : INTEGER;
		do
			from
				j:= 1;
				k:= 0;
			until i = 0 loop
				j := j * i;
				k := k + 1;
				i := i - 1;
			end
			return j;
	end /* factorial
	
	
end /*EJEMPLO

run factorial(4+5); /* como solo puede estar activo un inicio sólo llamaría a éste
	/* EJEMPLO.otroInicio(6); /* inicio alternativo: habría que comentar la linea anterior y descomentar esta
