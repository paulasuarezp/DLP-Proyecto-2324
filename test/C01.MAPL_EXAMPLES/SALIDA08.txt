pusha 4 ' encontrados = 0
push 0
store

pusha 0 ' numero = 2
push 2
store

inicio_do:
pusha 2 ' divisor = 2
push 2
store

inicio_while:
pusha 0
load
pusha 2
load
gt  ' numero > divisor
jz fin_while
pusha 0
load
pusha 2
load
mod ' numero % divisor
push 0
eq
jz fin_if_1
jmp fin_while ' break
fin_if_1:

pusha 2 ' divisor +=1
pusha 2
load
push 1
add
store
jmp inicio_while
fin_while:

pusha 0
load
pusha 2
load
eq  ' numero == divisor
jz fin_if_2
pusha 0 ' println numero
load
out
pushb 10
outb

pusha 4 ' encontrados +=1
pusha 4
load
push 1
add
store
fin_if_2:

pusha 0 ' numero +=1
pusha 0
load
push 1
add
store

pusha 4
load
push 25
lt ' encontrados < 25
jnz inicio_do
