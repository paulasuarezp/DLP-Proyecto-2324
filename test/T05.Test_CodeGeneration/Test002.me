//*
Test 2 para probar la Fase de Generación de Código

COMPROBACION: Si cuando pida un valor se introduce un 2 debería salir: 
C
1200
A
1000
B
1100
C
1200
D
1300

CONSEJO: No limitarse a comprobar el resultado de la ejecución. Se recomienda además abrir el fichero generado usando el depurador GVM y comprobar sus instrucciones.

Para facilitar esta tarea es de gran utilidad que el alumno haya generado directivas '#line' en el fichero de salida.
Para información sobre la función de dicha directiva se debe abrir con GVM el siguiente tutorial: 
Tutorial\3 Uso básico del depurador\4 Fusiñon Alto Nivel.txt

NOTA: Es posible que el alumno deba adaptar ligeramente la sintaxis del lenguaje si no coincide
con la del lenguaje que le corresponde.
*//

class Test002;
	global
		types
			deftuple Persona as
				inicial:CHARACTER;
				sueldo:DOUBLE;  
			end
		vars
			empresa:[4] Persona;
	
	create arranque;

	feature inicia is
		local
			i:INTEGER;
		do
			from
				i := 0;
			until i = 4 loop
				empresa[i].inicial := to<CHARACTER>(i + to<INTEGER>('A'));
				empresa[i].sueldo := to<DOUBLE>(1000 + (i * 100));
				i := i + 1;
			end  
	end

	feature busca(i:INTEGER) is
		do
			if (i < 0) or (i >= 4) then
				return;
			end
			println empresa[i].inicial;
			println empresa[i].sueldo;
	end

	feature imprime : INTEGER is
		local
			i:INTEGER;
			aux:Persona;
		do
			from
				i := 0;
			until i >= 4 loop
				aux.inicial := empresa[i].inicial;
				aux.sueldo := empresa[i].sueldo;
				
				println aux.inicial;
				println aux.sueldo;
				
				i := i + 1;
			end
			return i;
	end

	feature arranque is
		local
			posicion:INTEGER;
		do
			inicia();

			print 'D','a','m','e',' ','l','a',' ','p','o','s','i','c','i','o','n',':',' ';
			read posicion;
			busca(posicion);

			imprime();	/* No se recoge el valor de retorno
	end
end

main
	arranque();
end